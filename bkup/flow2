key module
symbol fsm_using_always
operator (
symbol clock
operator ,
symbol reset
operator ,
symbol req_0
operator ,
symbol req_1
operator ,
symbol gnt_0
operator ,
symbol gnt_1
operator )
operator ;
key input
symbol clock
operator ,
symbol reset
operator ,
symbol req_0
operator ,
symbol req_1
operator ;
key output
symbol gnt_0
operator ,
symbol gnt_1
operator ;
key wire
symbol clock
operator ,
symbol reset
operator ,
symbol req_0
operator ,
symbol req_1
operator ;
key reg
symbol gnt_0
operator ,
symbol gnt_1
operator ;
key assign
symbol eee
operator ;
key parameter
symbol SIZE
operator =
number 3
operator ;
key parameter
symbol IDLE
operator =
number 3'b001
operator ,
symbol GNT0
operator =
number 3'b010
operator ,
symbol GNT1
operator =
number 3'b100
operator ;
key reg
operator [
symbol SIZE
operator -
number 1
operator :
number 0
operator ]
symbol state
operator ;
key reg
operator [
symbol SIZE
operator -
number 1
operator :
number 0
operator ]
symbol next_state
operator ;
key always
operator @
operator (
symbol state
key and
symbol req_0
key or
symbol req_1
operator )
key begin
operator :
symbol FSM_COMBO
symbol next_state
operator =
number 3'b000
operator ;
key case
operator (
symbol state
operator )
symbol IDLE
operator :
key if
operator (
symbol req_0
operator ==
number 1'b1
operator )
key begin
key if
symbol next_state
operator =
symbol GNT0
operator ;
key end
key else
key if
operator (
symbol req_1
operator ==
number 1'b1
operator )
key begin
symbol next_state
operator =
symbol GNT1
operator ;
key end
key else
key begin
symbol next_state
operator =
symbol IDLE
operator ;
key end
symbol GNT0
operator :
key if
operator (
symbol req_0
operator ==
number 1'b1
operator )
key begin
symbol next_state
operator =
symbol GNT0
operator ;
key end
key else
key begin
symbol next_state
operator =
symbol IDLE
operator ;
key end
symbol GNT1
operator :
key if
operator (
symbol req_1
operator ==
number 1'b1
operator )
key begin
symbol next_state
operator =
symbol GNT1
operator ;
key end
key else
key begin
symbol next_state
operator =
symbol IDLE
operator ;
key end
key default
operator :
symbol next_state
operator =
symbol IDLE
operator ;
key endcase
key end
key always
operator @
operator (
key posedge
symbol clock
operator )
key begin
operator :
symbol FSM_SEQ
key if
operator (
symbol reset
operator ==
number 1'b1
operator )
key begin
symbol state
operator <=
operator #
number 1
symbol IDLE
operator ;
key end
key else
key begin
symbol state
operator <=
operator #
number 1
symbol next_state
operator ;
key end
key end
key always
operator @
operator (
key posedge
symbol clock
operator )
key begin
operator :
symbol OUTPUT_LOGIC
key if
operator (
symbol reset
operator ==
number 1'b1
operator )
key begin
symbol gnt_0
operator <=
operator #
number 1
number 1'b0
operator ;
symbol gnt_1
operator <=
operator #
number 1
number 1'b0
operator ;
key end
key else
key begin
key case
operator (
symbol state
operator )
symbol IDLE
operator :
key begin
symbol gnt_0
operator <=
operator #
number 1
number 1'b0
operator ;
symbol gnt_1
operator <=
operator #
number 1
number 1'b0
operator ;
key end
symbol GNT0
operator :
key begin
symbol gnt_0
operator <=
operator #
number 1
number 1'b1
operator ;
symbol gnt_1
operator <=
operator #
number 1
number 1'b0
operator ;
key end
symbol GNT1
operator :
key begin
symbol gnt_0
operator <=
operator #
number 1
number 1'b0
operator ;
symbol gnt_1
operator <=
operator #
number 1
number 1'b1
operator ;
key end
key default
operator :
key begin
symbol gnt_0
operator <=
operator #
number 1
number 1'b0
operator ;
symbol gnt_1
operator <=
operator #
number 1
number 1'b0
operator ;
key end
key endcase
key end
key end
key endmodule
